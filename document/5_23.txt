1. RENT_ID 값 대여 발생시마다 'R0000001' -> 'R0000002' 자동 증가
-> Sequence랑 Trigger로 해결가능, Concat() LPAD()로 해결

2. 복본번호에 대하여 UNIQUE 제약조건 설정필요. (동일 도서명 하에서만 복본번호가 UNIQUE하도록)

3. 한 EMPNO가 동일 BOOK_ID 에 대해 RENT가 중복할 수 없어야함
			-> 도서의 대출상태 정보를 판별하여 대출중이면 대출이 안되도록 하면 해결될것
			
			BOOKS에 대출가능여부 컬럼 추가 (기본적으로 Y)
			-> RENT 실행시 BOOKS의 대출가능여부 N으로 UPDATE -> RENT정보 INSERT	(이렇게되면 도서 대출시 대출가능여부를 판별하는과정을 먼저거쳐야함)
		case:
			-> 시간이 지나서 기간 안에 반납을 했음 -> BOOKS의 대출가능여부 N에서 Y로
			-> 시간이 지나서 반납기한이 지났음 -> BOOKS의 대출가능여부는 N 유지  -> 반납예정일을 빨간글씨로 바꾼다던지 기한만료에 맞는 처리
			
			-> if(RET_DT가 있는데 BOR_DT < RET_DT 이면) -> 대출중, 따라서 대출불가
			-> else if(RET_DT가 있는데 SYSDATE > RET_DT 이면) -> 반납기간 경과상태, 도서가 반납안된상태니 대출불가
			-> else(이외의 모든상태들, 도서는 있는데 RENT 데이터는 없다, 도서가 있고 RENT 데이터도있는데 마지막 RENT 데이터가 반납이된상태) -> 대출가능상태
			
4. DAO를 사용하여 테이블에 대한 CRUD 작업을 하는데 RENT 테이블과 BOOKS 테이블의 데이터를 JOIN 해서 두 데이터를 어떻게 가져오는지
https://stackoverflow.com/questions/10793915/how-to-create-a-dao-for-join-tables