접속중인 세션(이용자 정보)이 도서를 대여 했을때
RENT 테이블의 Row 정보를 생성해야함 ('R0000000'의 기본 형식으로 시작하여 RENT 데이터가 들어올때마다 1씩 자동으로 늘려나가는 RENT_ID 선택한 도서의 PK BOOK_ID와 현재 이용자의 PK EMPNO 
그리고 현재 날짜인 SYSDATE를 이용한 대출일, 대출기간이 기본 2주라고할때 (대출일+2주)의 값을 가지는 반납일) 
이렇게 구성을 하면 되겠다고 생각하였고, ORACLE 에서 자동증분 에 대한 처리를 시퀀스와 트리거를 이용하여 할 수 있다는 정보를 토대로 조금 찾아보고 학습을 할 필요가있음.

갑작스런 결론 : select CONCAT('R',LPAD(RENT_SEQ.NEXTVAL,7,0)) AS RENT_ID, BOOK_ID, TITLE FROM BOOKS;
TRIGGER 란거를 이용해서 RENT 테이블에 INSERT 실행시 SEQUENCE 문자열 앞에 'R'을 붙여주려고 했지만, CONCAT함수를 사용해보니 간단하게 해결되어버렸음.


데이터베이스에서 일련번호를 생성하는 것은 동시성 문제가 발생할 수 있어서 대부분의 데이터베이스에서는 일련번호 생성을 처리해주는 기능들을 제공.
MS-SQL 서버에서는 컬럼에 identify 속성을 지정할 수 있고, MySQL 에서는 컬럼에 auto-increment 속성을 지정, Oracle에서는 테이블 속성이 아닌 별도의 Sequence객체를 생성해서 이용할 수 있다.

1. SEQUENCE

오라클은 자동증분 설정이 없기 때문에 시퀀스라는 것을 만들어야 한다. 비슷한 방법으로 MAX(컬럼)+1을 사용하는 방법도 있다.
이러한 DB의 기능을 사용하면 동시성 문제에 얽매이지 않고 간단히 처리가 가능하지만 단점으로는 각 DB 별로 처리하는 방법이 다르다보니까 하나의 DB에 종속되어버리는 단점이 있다.

생성 형식
CREATE SEQUENCE SEQ_NAME
	INCREMENT BY n
	START WITH n
	MINVALUE n
	MAXVALUE n
	NOCYCLE		//MAXVALUE 도달하면 MINVALUE 부터 다시 시작할지
	NOCACHE		//기본값은 20
	NOORDER;
	

2. TRIGGER

테이블에 대한 이벤트에 반응하여 자동으로 실행되는 작업으로 PL/SQL 종류 중 하나
INSERT, UPDATE, DELETE 세 가지 작업에 대해 발생되며 세가지 각각 하나씩 최대 3가지의 트리거를 가질 수 있고, 새로 정의하면 기존의 것이 대체되는 형식.
트리거의 주요 목적은 테이블의 데이터 무결성 보장과 DB 관리의 자동화

이해를 돕기위한 예시
ex) 학교에 학생이라는 데이터가 있을때, 학생이 학교를 그만두는 경우가 발생하면 학교의 학생테이블에서는 해당 학생에 대한 삭제가 발생하게 됨.
-> 하지만 어느날 그 학생이 자신이 언제부터 언제까지는 다녔다 와 같은 자료를 요구한다면 학교의 학생테이블에서는 이에 대한 자료가 삭제되어있을것이다.
->그렇다면 삭제하기 전에 미리 다른곳에 복사해놓으면 문제가 해결이었지만, 매번 이런 작업을 수작업으로 한다면 데이터에 대한 신뢰가 떨어지고, 데이터의 구조도 망가지게 되는 경우가 발생.
->이런 경우를 대비하기위하여 특정 작업이 일어날 경우 자동으로 데이터를 백업저장해주는 기능을 해주는 작업을 설정하는데 이게 트리거라고 한다.


생성 형식
CREATE [OR REPLACE] TRIGGER TRG_NAME
BEFORE or AFTER INSERT or UPDATE or DELETE ON 테이블명
[FOR EACH ROW]
[WHEN 조건]
BEGIN
	트리거 본문
END;